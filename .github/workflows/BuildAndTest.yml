name: Build and test

on:
  push:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        config: [ {os: windows-latest, copyCommand: copy, artifactName: ffmpegTestWindows, buildPath: Release/, dummyLib: dummyLib.dll, ffmpegTest: ffmpegTest.exe} ]
    runs-on: ${{ matrix.config.os }}
    
    steps:
    - uses: actions/checkout@v4

    - name: Configure CMake
      run: cmake -B ${{ github.workspace }}/build -S ${{ github.workspace }} -DENABLE_TEST=ON

    - name: Build
      run: cmake --build ${{ github.workspace }}/build -j 4 --config Release

    - name: Unit tests
      run: |
        ${{ matrix.config.copyCommand }} ${{ github.workspace }}/build/test/dummyLib/${{ matrix.config.buildPath }}${{ matrix.config.dummyLib }} ${{ github.workspace }}/build/test/unit/${{ matrix.config.buildPath }}
        cd ${{ github.workspace }}/build/test/unit/${{ matrix.config.buildPath }}
        ./unitTest

    - uses: actions/upload-artifact@master
      with:
        name: ${{ matrix.config.artifactName }}
        path: ${{ github.workspace }}/build/test/ffmpegTest/${{ matrix.config.buildPath }}${{ matrix.config.ffmpegTest }}

  testffmpegNative:
    needs: build
    strategy:
      matrix:
        config: [ {os: windows-latest, artifactName: ffmpegTestWindows, azureFolder: windows, unzipCommand: 7z x } ]
    runs-on: ${{ matrix.config.os }}
    steps:
    - uses: actions/download-artifact@master
      with:
        name: ${{ matrix.config.artifactName }}

    - name: Make ffmpegTest executable
      run: chmod a+x ffmpegTest
      if: ${{ matrix.config.os }} != windows-latest

    - name: Install ffmpeg
      run: |
        choco install ffmpeg-shared
        ls 'C:\Program Files\' -R
        ffmpeg --version

    - name: runffmpegTest
      run: ./ffmpegTest
